name: build

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ogdf/ogdf
          path: ogdf
      - uses: actions/checkout@v4
        with:
          repository: reymond-group/tmap
          path: tmap

      - name: setup msys2
        uses: msys2/setup-msys2@v2
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            git
            zip


      - name: build ogdf (-NIX)
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: |
          cd ogdf
          cmake -DBUILD_SHARED_LIBS=ON .
          make

      - name: build ogdf (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: msys2 {0}
        run: |
          cd ogdf
          cmake -DBUILD_SHARED_LIBS=ON .
          make

      - name: build tmap (linux)
        if: ${{ matrix.os == 'ubuntu-latest'}}
        run: |
          cd tmap
          ln -s ../ogdf ../ogdf/lib # lib-directory hardcoded in tmap CMakeLists
          LIBOGDF_INSTALL_PATH="../ogdf" cmake -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=out .
          make
          mv out/_tmap*.so out/libtmap.so # TODO: hacky, tmap lib bekommt sonst so komischen Namen und laesst sich nicht linken


      - name: build tmap (mac)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install llvm
          cd tmap
          ln -s ../ogdf ../ogdf/lib # lib-directory hardcoded in tmap CMakeLists
          LIBOGDF_INSTALL_PATH="../ogdf" cmake -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=out -DOpenMP_C_FLAG=-fopenmp -DOpenMP_CXX_FLAG=-fopenmp .
          make
          mv out/_tmap*.so out/libtmap.so # TODO: hacky, tmap lib bekommt sonst so komischen Namen und laesst sich nicht linken

      - name: build test (-NIX)
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: |
          mkdir build
          cd build
          cmake  ..
          make

      - name: build test (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: msys2 {0}
        run: |
          mkdir build
          cd build
          cmake -G "MSYS Makefiles" ..
          make

      - name: test
        run: |
          cd build
          ./ogdf_test
          ldd libogdf_based_lib.so ||:
